
plugins {
  id "org.springframework.boot" version "2.1.0.RELEASE"
}
plugins {
  id "io.spring.dependency-management" version "1.0.7.RELEASE"
}
//plugins {
//  id "com.google.protobuf" version "0.8.8"
//}
repositories {
    mavenCentral()
}

version = '1.0.0'

bootJar {
    baseName = 'control-center'
    classifier = 'xproject'
}

dependencies {
    compile "org.iharu.bootstrap:SpringBoot"
    compile project(':XTrafficModule')
    
    def $springBootVersion = '2.1.5.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: $springBootVersion
    
    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.2.3'
    compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '1.3.2'
    compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-autoconfigure', version: '1.3.2'
    
    compile group: 'de.codecentric', name: 'spring-boot-admin-starter-client', version: '2.1.5'
    compile group: 'de.codecentric', name: 'spring-boot-admin-starter-server', version: '2.1.5'
    compile group: 'de.codecentric', name: 'spring-boot-admin-server-ui', version: '2.1.5'
    
//    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.7.1'
//    compile group: 'com.googlecode.protobuf-java-format', name: 'protobuf-java-format', version: '1.4'
}

// pre-compiled protoc
//protobuf {
//	// Configure the protoc executable
//	protoc {
//            // Download from repositories
//            artifact = 'com.google.protobuf:protoc:3.7.1'
//	}
//        // generated java files dir
//        generatedFilesBaseDir = "$projectDir/generated-sources"
//        generateProtoTasks {
//            // all() returns the collection of all protoc tasks
//            all().each { task ->
//                // Here you can configure the task
//            }
//            // In addition to all(), you may get the task collection by various
//            // criteria:
//            // (Java only) returns tasks for a sourceSet
//            ofSourceSet('main')
//        } 
//}
//sourceSets {
//    main {
//        proto {
//            srcDir 'src/main/proto'
//        }
//        java {
//            // include self written and generated code
//            srcDirs 'src/main/java', 'generated-sources/main/java'            
//        }
//        resources {
//            srcDir 'src/main/resources'
//        }
//    }
//    // remove the test configuration - at least in your example you don't have a special test proto file
//}

//clean {
//    delete protobuf.generatedFilesBaseDir
//}